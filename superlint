#!/bin/bash

COMMIT_RANGE="$1"

if [ -z "$COMMIT_RANGE" ]; then
    echo "No commit range specified; Skipping checks"
    exit 0
fi;

COMMIT_RANGE_START="$(echo "$COMMIT_RANGE" | sed -E 's/^([a-fA-F0-9]+).*/\1/')"
COMMIT_RANGE_END="$(echo "$COMMIT_RANGE" | sed -E 's/^([a-fA-F0-9]+)\.\.\.([a-fA-F0-9]+)$/\2/')"

function getLinter
{
    if [ ${1: -4} == ".php" ]; then
        echo phpcs --report=json
    elif [ ${1: -3} == ".js" ]; then
        echo eslint -f json
    elif [ ${1: -3} == ".py" ]; then
        echo pylint -f json -d R 
    else
        echo true
    fi
}

# Get the files changed by this commit (excluding deleted files).
unset files_changed i
while IFS= read -r -d $'\0' file; do
    files_changed[i++]="$file"
done < <(git diff --name-only --diff-filter=da -z "$COMMIT_RANGE")

# New files
unset files_added i
while IFS= read -r -d $'\0' file; do
    files_added[i++]="$file"
done < <(git diff --name-only --diff-filter=A -z "$COMMIT_RANGE")

echo "Changed file"
for file in "${files_changed[@]}"; do
    git checkout "$COMMIT_RANGE_START" $file
    `getLinter $file` $file > $file.lint.orig
    git checkout "$COMMIT_RANGE_END" $file
    `getLinter $file` $file > $file.lint.new
    lint-diff $file.lint.orig $file.lint.new
    rm $file.lint.orig $file.lint.new
done

echo "Added file"
for file in "${files_added[@]}"; do
        echo $file
done

